- name: Setup Postgres Container
  hosts: postgres
  gather_facts: no
  any_errors_fatal: yes
  tags:
  - postgres
  vars:
    postgres_data_dir: /var/data/postgres
  tasks:
  - when: postgres_runtime_user is defined
    block:
    - name: Get Postgres User UID
      shell: "getent passwd {{ postgres_runtime_user }} | cut -d ':' -f 3 || false"
      changed_when: false
      register: postgres_runtime_uid_out
    - name: Setup user for Postgres
      when: "postgres_runtime_uid_out.stdout | default('') == ''"
      user:
        name: "{{ postgres_runtime_user }}"
        system: yes
        home: /dev/null
        shell: /bin/false
        create_home: no
    - name: Get Postgres User UID
      shell: "getent passwd {{ postgres_runtime_user }} | cut -d ':' -f 3 || false"
      changed_when: false
      register: postgres_runtime_uid_out
    - name: Set Postgres User UID Fact
      set_fact:
        postgres_runtime_uid: "{{ postgres_runtime_uid_out.stdout }}"

  - name: Create Postgres Container Directories
    tags:
    - folders
    file:
      path: "{{ postgres_data_dir }}/{{ item }}"
      state: directory
      owner: "{{ postgres_runtime_user | default(omit) }}"
      group: "{{ postgres_runtime_user | default(omit) }}"
      mode: 0755
    with_items:
    - ''
    - data
  - name: Start Postgres Container
    docker_container:
      name: postgres
      user: "{{ postgres_runtime_uid | default(omit) }}"
      restart: yes
      restart_policy: unless-stopped
      image: registry.redhat.io/rhscl/postgresql-96-rhel7:1
      published_ports:
      - 5432:5432
      env:
        POSTGRESQL_ADMIN_PASSWORD: "{{ quay_db_admin_password }}"
      state: started
      volumes:
      - "{{ postgres_data_dir }}/data:/var/lib/pgsql/data:Z"
  - name: Wait for Postgres Container
    delegate_to: localhost
    wait_for:
      host: "{{ inventory_hostname }}"
      port: "5432"
      delay: 5
      timeout: 60
